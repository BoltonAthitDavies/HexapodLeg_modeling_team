<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!--
    control.xacro: defines a xacro macro named `ros2_control` so existing calls
    like `<xacro:ros2_control name="HexapodSystem"/>` keep working.

    Params:
      - name: ros2_control system name
      - hardware: 'gz' (default) to use gz_ros2_control, or 'mock' to use mock_components
  -->
  <xacro:macro name="ros2_control" params="name hardware:='ign'">
    <ros2_control name="${name}" type="system">
      <!-- Gazebo Sim (Ignition) plugin variants -->
      <xacro:if value="${hardware == 'gz'}">
        <hardware>
          <plugin>gz_ros2_control/GazeboSystem</plugin>
        </hardware>
      </xacro:if>
      <xacro:if value="${hardware == 'ign'}">
        <hardware>
          <plugin>ign_ros2_control/IgnitionSystem</plugin>
        </hardware>
      </xacro:if>
      <!-- Classic Gazebo fallback -->
      <xacro:if value="${hardware == 'classic'}">
        <hardware>
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>
      </xacro:if>
      <xacro:unless value="${hardware == 'gz'}">
        <hardware>
          <plugin>mock_components/GenericSystem</plugin>
          <param name="mock_sensor_commands">false</param>
          <param name="state_following_offset">0.0</param>
        </hardware>
      </xacro:unless>

      <!-- Joint interfaces: keep in sync with the robot joints -->
      <joint name="rev1">
        <command_interface name="position">
          <param name="min">-3.14159265359</param>
          <param name="max">3.14159265359</param>
        </command_interface>
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="rev_2">
        <command_interface name="position">
          <param name="min">-3.14159265359</param>
          <param name="max">3.14159265359</param>
        </command_interface>
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
    </ros2_control>
  </xacro:macro>

</robot>
